export = sdk;
declare class sdk {
    constructor(_options: any);
    options: any;
    token: any;
    reqLastTime: any;
    requestingNow: any;
    addListener(type: any, listener: any): any;
    buildQuery(params: any): any;
    emit(type: any, ...args: any[]): any;
    eventNames(): any;
    extend(target: any, ...args: any[]): any;
    getHttps(): any;
    getLanguage(): any;
    getMaxListeners(): any;
    getSecureRequests(): any;
    getToken(): any;
    getVersion(): any;
    hasOwnProperty(p0: any): any;
    implode(glue: any, pieces: any): any;
    isAuthOpenAPIMember(sessionData: any): any;
    isEmpty(_obj: any): any;
    listenerCount(type: any): any;
    listeners(type: any): any;
    oldRequest(_method: any, _requestParams: any, _response: any): void;
    on(type: any, listener: any): any;
    once(type: any, listener: any): any;
    prependListener(type: any, listener: any): any;
    prependOnceListener(type: any, listener: any): any;
    removeAllListeners(type: any, ...args: any[]): any;
    removeListener(type: any, listener: any): any;
    request(_method: any, _requestParams: any, _response: any): void;
    requestServerToken(_response: any, _code: any, _redirect_uri: any): void;
    setHttps(_v: any): any;
    setLanguage(_l: any): any;
    setMaxListeners(n: any): any;
    setSecureRequests(_v: any): any;
    setToken(_t: any): any;
    setVersion(_v: any): any;
    sortObjectByKey(o: any): any;
    waitForNextRequest(_cb: any): void;
}